{"version":3,"sources":["contexts/util.tsx","contexts/filter.tsx","components/FilterButtonGroup.tsx","reducers/todos.ts","contexts/todos.tsx","reducers/undoable.ts","components/NewItemForm.tsx","components/TodoListItem.tsx","components/TodoList.tsx","components/EditableTodoList.tsx","components/Header.tsx","contexts/theme.tsx","components/ColorModeSwitch.tsx","components/TopBar.tsx","components/App.tsx","index.tsx"],"names":["createDefinedContext","ctx","React","undefined","c","Error","useFilter","FilterContext","FilterProvider","props","initValue","filter","setFilter","Provider","value","children","FilterButtonGroup","FormControl","component","FormLabel","RadioGroup","row","name","onChange","event","target","FormControlLabel","control","Radio","label","todosReducer","todos","action","type","concat","id","nanoid","text","complete","map","todo","useTodos","TodosContext","TodosProvider","reducer","state","past","present","future","previous","length","slice","next","newFuture","newPresent","dispatchTodos","NewItemForm","setText","onSubmit","preventDefault","variant","fullWidth","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","required","autoFocus","TodoListItem","item","labelId","ListItem","role","button","onClick","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","applyFilter","TodoList","filteredTodos","List","EditableTodoList","style","margin","Header","textAlign","useColorMode","ColorModeContext","ThemeProvider","colorMode","setColorMode","theme","createTheme","palette","CssBaseline","ColorModeSwitch","oppositeMode","Tooltip","title","arrow","containerStyles","display","alignItems","justifyContent","TopBar","Button","disabled","initTodos","App","Container","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.903d04cb.chunk.js","sourcesContent":["import * as React from 'react'\n\n/**\n * A helper to create a Context  with no upfront default value, and without\n * having to check for undefined all the time.\n * @see {@link https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/context React Typescript Cheatsheeet}\n */\nfunction createDefinedContext<A extends {} | null>() {\n  const ctx = React.createContext<A | undefined>(undefined)\n\n  function useDefinedContext() {\n    const c = React.useContext(ctx)\n    if (c === undefined)\n      throw new Error(\n        'useDefinedContext must be inside a Provider with a value'\n      )\n    return c\n  }\n\n  return [useDefinedContext, ctx] as const // makes TypeScript infer a tuple\n}\n\nexport { createDefinedContext }\n","import * as React from 'react'\nimport { createDefinedContext } from './util'\nimport { Filter } from '../types'\n\ninterface IFilterContext {\n  filter: Filter\n  setFilter(filter: Filter): void\n}\n\nconst [useFilter, FilterContext] = createDefinedContext<IFilterContext>()\n\ninterface Props {\n  children: React.ReactNode\n  initValue?: Filter\n}\n\nconst FilterProvider = (props: Props) => {\n  const [filter, setFilter] = React.useState<Filter>(props.initValue || 'all')\n\n  return (\n    <FilterContext.Provider value={{ filter, setFilter }}>\n      {props.children}\n    </FilterContext.Provider>\n  )\n}\n\nexport { FilterProvider as default, useFilter }\n","import * as React from 'react'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport { useFilter } from '../contexts/filter'\nimport { Filter } from '../types'\n\nconst FilterButtonGroup = () => {\n  const { filter, setFilter } = useFilter()\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Show</FormLabel>\n      <RadioGroup\n        row\n        aria-label=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => setFilter(event.target.value as Filter)}\n      >\n        <FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\n        <FormControlLabel\n          value=\"complete\"\n          control={<Radio />}\n          label=\"Complete\"\n        />\n        <FormControlLabel\n          value=\"incomplete\"\n          control={<Radio />}\n          label=\"Incomplete\"\n        />\n      </RadioGroup>\n    </FormControl>\n  )\n}\n\nexport default FilterButtonGroup\n","import { nanoid } from 'nanoid'\nimport { Action, Todo } from '../types'\n\nconst todosReducer = (todos: Todo[], action: Action) => {\n  switch (action.type) {\n    case 'item/add':\n      return todos.concat({\n        id: nanoid(),\n        text: action.text,\n        complete: false\n      })\n\n    case 'item/toggle':\n      return todos.map(todo => {\n        if (todo.id === action.id) {\n          return { ...todo, complete: !todo.complete }\n        }\n        return todo\n      })\n\n    case 'item/delete':\n      return todos.filter(todo => todo.id !== action.id)\n\n    default:\n      return todos // ignore unrecognised\n  }\n}\n\nexport { todosReducer }\n","import * as React from 'react'\nimport { todosReducer } from '../reducers/todos'\nimport { undoable } from '../reducers/undoable'\nimport { createDefinedContext } from './util'\nimport { Action, Todo } from '../types'\n\ninterface ITodosContext {\n  todos: {\n    past: Todo[][]\n    present: Todo[]\n    future: Todo[][]\n  }\n  dispatchTodos(action: Action): void\n}\n\nconst [useTodos, TodosContext] = createDefinedContext<ITodosContext>()\n\ninterface Props {\n  children: React.ReactNode\n  initValue?: {\n    past: Todo[][]\n    present: Todo[]\n    future: Todo[][]\n  }\n}\n\nconst TodosProvider = (props: Props) => {\n  const [todos, dispatchTodos] = React.useReducer(\n    undoable(todosReducer),\n    props.initValue || []\n  )\n\n  return (\n    <TodosContext.Provider value={{ todos, dispatchTodos }}>\n      {props.children}\n    </TodosContext.Provider>\n  )\n}\n\nexport { TodosProvider as default, useTodos }\n","import * as React from 'react'\nimport { Action } from '../types'\n\nconst undoable = (reducer: React.Reducer<any, Action>) => {\n  return (state: any, action: Action) => {\n    const { past, present, future } = state\n\n    switch (action.type) {\n      case 'undo':\n        const previous = past[past.length - 1]\n        const newPast = past.slice(0, past.length - 1)\n        return {\n          past: newPast,\n          present: previous,\n          future: [present, ...future]\n        }\n      case 'redo':\n        const next = future[0]\n        const newFuture = future.slice(1)\n        return {\n          past: [...past, present],\n          present: next,\n          future: newFuture\n        }\n      default:\n        // Delegate handling the action to the passed reducer\n        const newPresent = reducer(present, action)\n        if (present === newPresent) {\n          return state\n        }\n        return {\n          past: [...past, present],\n          present: newPresent,\n          future: []\n        }\n    }\n  }\n}\n\nexport { undoable }\n","import * as React from 'react'\nimport AddIcon from '@material-ui/icons/Add'\nimport FormControl from '@material-ui/core/FormControl'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport { useTodos } from '../contexts/todos'\n\nconst NewItemForm = () => {\n  const [text, setText] = React.useState('')\n  const { dispatchTodos } = useTodos()\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value)\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    dispatchTodos({ type: 'item/add', text })\n    setText('')\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl variant=\"outlined\" fullWidth>\n        <InputLabel htmlFor=\"component-outlined\">Add an item</InputLabel>\n        <OutlinedInput\n          id=\"component-outlined\"\n          value={text}\n          onChange={handleChange}\n          label=\"Add an item\"\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton type=\"submit\">\n                <AddIcon />\n              </IconButton>\n            </InputAdornment>\n          }\n          required\n          autoFocus\n        />\n      </FormControl>\n    </form>\n  )\n}\n\nexport default NewItemForm\n","import * as React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport { Todo } from '../types'\nimport { useTodos } from '../contexts/todos'\n\ninterface Props {\n  item: Todo\n}\n\nconst TodoListItem = (props: Props) => {\n  const { id, text, complete } = props.item\n  const { dispatchTodos } = useTodos()\n\n  const handleClick = () => {\n    dispatchTodos({ type: 'item/toggle', id })\n  }\n\n  const handleDelete = () => {\n    dispatchTodos({ type: 'item/delete', id })\n  }\n\n  const labelId = `todo-list-label-${id}`\n  return (\n    <ListItem role=\"listitem\" button onClick={handleClick}>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          checked={complete}\n          tabIndex={-1}\n          disableRipple\n          inputProps={{ 'aria-labelledby': labelId }}\n        />\n      </ListItemIcon>\n      <ListItemText id={labelId} primary={text} />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete}>\n          <ClearIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n\nexport default TodoListItem\n","import * as React from 'react'\nimport List from '@material-ui/core/List'\nimport TodoListItem from './TodoListItem'\nimport { useTodos } from '../contexts/todos'\nimport { useFilter } from '../contexts/filter'\nimport { Filter, Todo } from '../types'\n\nconst TodoList = () => {\n  const { todos } = useTodos()\n  const { filter } = useFilter()\n\n  const filteredTodos = applyFilter(todos.present, filter)\n\n  return (\n    <List>\n      {filteredTodos.map(todo => (\n        <TodoListItem key={todo.id} item={todo} />\n      ))}\n    </List>\n  )\n}\n\nconst applyFilter = (todos: Todo[], filter: Filter) => {\n  return todos.filter(todo => {\n    if (filter === 'all') {\n      return true\n    }\n    if (filter === 'complete' && todo.complete) {\n      return true\n    }\n    if (filter === 'incomplete' && !todo.complete) {\n      return true\n    }\n    return false\n  })\n}\n\nexport default TodoList\n","import * as React from 'react'\nimport FilterButtonGroup from './FilterButtonGroup'\nimport NewItemForm from './NewItemForm'\nimport TodoList from './TodoList'\nimport FilterProvider from '../contexts/filter'\n\nconst EditableTodoList = () => {\n  return (\n    <FilterProvider initValue=\"all\">\n      <div style={{ margin: '16px 0' }}>\n        <FilterButtonGroup />\n      </div>\n      <NewItemForm />\n      <TodoList />\n    </FilterProvider>\n  )\n}\n\nexport default EditableTodoList\n","import * as React from 'react'\n\nconst Header = () => {\n  return (\n    <header style={{ textAlign: 'center' }}>\n      <h1 style={{ margin: 0 }}>Todo List</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import * as React from 'react'\nimport { createTheme } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles'\nimport { createDefinedContext } from './util'\nimport { ColorMode } from '../types'\n\ninterface IColorModeContext {\n  colorMode: ColorMode\n  setColorMode(colorMode: ColorMode): void\n}\n\nconst [useColorMode, ColorModeContext] =\n  createDefinedContext<IColorModeContext>()\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst ThemeProvider = (props: Props) => {\n  const [colorMode, setColorMode] = React.useState<ColorMode>('light')\n\n  const theme = React.useMemo(\n    () => createTheme({ palette: { type: colorMode } }),\n    [colorMode]\n  )\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <ColorModeContext.Provider value={{ colorMode, setColorMode }}>\n        {props.children}\n      </ColorModeContext.Provider>\n    </MuiThemeProvider>\n  )\n}\n\nexport { ThemeProvider as default, useColorMode }\n","import * as React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { useColorMode } from '../contexts/theme'\n\nconst ColorModeSwitch = () => {\n  const { colorMode, setColorMode } = useColorMode()\n  const oppositeMode = colorMode === 'light' ? 'dark' : 'light'\n  const label = `Activate ${oppositeMode} mode`\n\n  const handleClick = () => {\n    setColorMode(oppositeMode)\n  }\n\n  return (\n    <Tooltip title={label} arrow>\n      <IconButton onClick={handleClick} aria-label={label}>\n        {colorMode === 'light' ? <Brightness4Icon /> : <Brightness7Icon />}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default ColorModeSwitch\n","import * as React from 'react'\nimport Button from '@material-ui/core/Button'\nimport ColorModeSwitch from './ColorModeSwitch'\nimport { useTodos } from '../contexts/todos'\n\nconst TopBar = () => {\n  const { todos, dispatchTodos } = useTodos()\n\n  const handleUndo = () => {\n    dispatchTodos({ type: 'undo' })\n  }\n  const handleRedo = () => {\n    dispatchTodos({ type: 'redo' })\n  }\n\n  return (\n    <div style={containerStyles}>\n      <Button disabled={todos.past.length === 0} onClick={handleUndo}>\n        Undo\n      </Button>\n      <Button disabled={todos.future.length === 0} onClick={handleRedo}>\n        Redo\n      </Button>\n      <ColorModeSwitch />\n    </div>\n  )\n}\n\nconst containerStyles = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end'\n}\n\nexport default TopBar\n","import * as React from 'react'\nimport { nanoid } from 'nanoid'\nimport Container from '@material-ui/core/Container'\nimport EditableTodoList from './EditableTodoList'\nimport Header from './Header'\nimport TopBar from './TopBar'\nimport ThemeProvider from '../contexts/theme'\nimport TodosProvider from '../contexts/todos'\n\nconst initTodos = {\n  past: [],\n  present: [\n    {\n      id: nanoid(),\n      text: 'Hello, world!',\n      complete: true\n    },\n    {\n      id: nanoid(),\n      text: `This is an example todo item.`,\n      complete: true\n    },\n    {\n      id: nanoid(),\n      text: 'Add your own todo items in the textbox above.',\n      complete: false\n    }\n  ],\n  future: []\n}\n\nconst App = () => {\n  return (\n    <TodosProvider initValue={initTodos}>\n      <ThemeProvider>\n        <Container maxWidth=\"sm\">\n          <TopBar />\n          <Header />\n          <EditableTodoList />\n        </Container>\n      </ThemeProvider>\n    </TodosProvider>\n  )\n}\n\nexport default App\n","import * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}